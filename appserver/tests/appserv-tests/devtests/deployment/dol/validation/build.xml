<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE project [
<!--

    Copyright (c) 2017, 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<!ENTITY commonBuild SYSTEM "./../../config/common.xml">
]>

<project name="validationApp" default="usage" basedir=".">

    &commonBuild;

    <property name="testName" value="validation"/>

    <target name="prepare" depends="init">
        <property name="validation.war" 
            value="${build}/war/${testName}.war"/>
        <property name="validation.jar" 
            value="${build}/ejb/${testName}-ejb.jar"/>
        <property name="validation.rar" 
            value="${build}/rar/${testName}.rar"/>
        <property name="validation.car" 
            value="${build}/car/${testName}-client.jar"/>

        <property name="validation.wlsRar" 
            value="${build}/wlsRar/${testName}.rar"/>

        <property name="validation.ear.dir" value="${build}/ear"/>
        <property name="validation.ear.war" 
                  value="${validation.ear.dir}/${testName}.war"/>
        <property name="validation.ear.jar" 
                  value="${validation.ear.dir}/${testName}-ejb.jar"/>
        <property name="validation.ear.rar" 
                  value="${validation.ear.dir}/${testName}.rar"/>
        <property name="validation.ear.car" 
                  value="${validation.ear.dir}/${testName}-client.jar"/>
        <property name="validation.ear" 
                  value="${validation.ear.dir}/${testName}.ear"/>

        <property name="validation.wlsEar.dir" value="${build}/wlsEar"/>
        <property name="validation.wlsEar.wlsRar" 
                 value="${validation.wlsEar.dir}/${testName}.rar"/>
        <property name="validation.wlsEar" 
                  value="${validation.wlsEar.dir}/${testName}.ear"/>
        <property name="validation.wlsEar2.dir" value="${build}/wlsEar2"/>
        <property name="validation.wlsEar2" 
                  value="${validation.wlsEar2.dir}/${testName}.ear"/>
        <property name="validation.wlsEar3.dir" value="${build}/wlsEar3"/>
        <property name="validation.wlsEar3.wlsRar" 
                 value="${validation.wlsEar3.dir}/${testName}.rar"/>
        <property name="validation.wlsEar3" 
                  value="${validation.wlsEar3.dir}/${testName}.ear"/>

        <mkdir dir="${build}/war"/>
        <mkdir dir="${build}/ejb"/>
        <mkdir dir="${build}/rar"/>
        <mkdir dir="${build}/car"/>
        <mkdir dir="${build}/ear"/>

        <mkdir dir="${build}/wlsRar"/>
        <mkdir dir="${build}/wlsEar"/>
        <mkdir dir="${build}/wlsEar2"/>
        <mkdir dir="${build}/wlsEar3"/>
    </target>

    <target name="compile" depends="prepare">
        <javac srcdir="."
               destdir="${build}"
               debug="on"
               failonerror="true">
           <classpath>
                <path refid="gfv3.classpath"/>
            </classpath>
        </javac>
    </target>

    <target name="assemble" depends="prepare">
        <!-- assemble the standalone archives -->
        <jar destfile="${validation.war}" basedir="${basedir}/war"/>
        <jar destfile="${validation.jar}" basedir="${basedir}/ejb"/>
        <jar destfile="${validation.rar}" basedir="${basedir}/rar"/>
        <jar destfile="${validation.car}" basedir="${basedir}/car"
             manifest="${basedir}/car/META-INF/MANIFEST.MF"/>

        <jar destfile="${validation.wlsRar}" basedir="${basedir}/wlsRar"/>

        <!-- assemble the ear -->
        <delete>
          <fileset dir="${validation.ear.dir}" includes="*/**"/>
        </delete>
        <jar destfile="${validation.ear.war}" basedir="${basedir}/ear/war"/>
        <jar destfile="${validation.ear.jar}" basedir="${basedir}/ear/ejb"/>
        <jar destfile="${validation.ear.rar}" basedir="${basedir}/ear/rar"/>
        <jar destfile="${validation.ear.car}" basedir="${basedir}/ear/car" 
             manifest="${basedir}/ear/car/META-INF/MANIFEST.MF"/>
        <copy todir="${validation.ear.dir}">
            <fileset dir="${basedir}/ear" includes="META-INF/*"/>
        </copy>
        <copy todir="${validation.ear.dir}">
            <fileset dir="${basedir}/ear" includes="alt-ejb-jar.xml"/>
        </copy>
        <jar destfile="${validation.ear}" basedir="${validation.ear.dir}"/>

        <delete>
          <fileset dir="${validation.wlsEar.dir}" includes="*/**"/>
        </delete>
        <jar destfile="${validation.wlsEar.wlsRar}" basedir="${basedir}/wlsEar/wlsRar"/>
        <copy todir="${validation.wlsEar.dir}">
            <fileset dir="${basedir}/wlsEar" includes="META-INF/*"/>
        </copy>
        <jar destfile="${validation.wlsEar}" basedir="${validation.wlsEar.dir}"/>

        <delete>
          <fileset dir="${validation.wlsEar2.dir}" includes="*/**"/>
        </delete>
        <copy todir="${validation.wlsEar2.dir}">
            <fileset dir="${validation.wlsEar.dir}" includes="*.rar"/>
        </copy>
        <copy todir="${validation.wlsEar2.dir}">
            <fileset dir="${basedir}/wlsEar2" includes="META-INF/*"/>
        </copy>
        <jar destfile="${validation.wlsEar2}" basedir="${validation.wlsEar2.dir}"/>

        <delete>
          <fileset dir="${validation.wlsEar3.dir}" includes="*/**"/>
        </delete>
        <copy todir="${validation.wlsEar3.dir}">
            <fileset dir="${basedir}/wlsEar3" includes="META-INF/*"/>
        </copy>
        <copy todir="${validation.wlsEar3.dir}"
            file="${validation.wlsEar.wlsRar}">
        </copy>
        <jar destfile="${validation.wlsEar3}" basedir="${validation.wlsEar3.dir}"/>

    </target>

    <target name="run.validator" depends="init">
<echo>${inst}</echo>
        <javaWithResult
            fork="true"
            failonerror="false"
            jvm="${JAVA}"
            classname="dol.validation.Validator"
            output="${build}/${log.id}.output.log"
            resultproperty="result">
<!--
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=6666,server=y,suspend=y"/>
-->
            <jvmarg value="-Dorg.omg.CORBA.ORBInitialHost=${http.host}"/>
            <jvmarg value="-Dorg.omg.CORBA.ORBInitialPort=${orb.port}"/>
            <jvmarg value="-Dcom.sun.aas.installRoot=${inst}"/>
            <jvmarg value="-Dwriteout.xml=true"/>
            <jvmarg value="-Djavax.enterprise.system.tools.deployment.org.glassfish.deployment.common=FINE"/>

            <classpath>
                <path refid="gfv3.classpath"/>
                <path location="${build}"/>
            </classpath>

            <arg line="${arg.list}"/>

        </javaWithResult>

        <antcall target="processResult">
            <param name="result" value="${result}"/>
            <param name="log" value="${build}/${log.id}.output.log"/>
        </antcall>
    </target>

    <target name="private-all" depends="prepare">
        <antcall target="compile"/>
        <antcall target="assemble"/>
        <antcall target="declare-test">
            <param name="description" value="dol/validation Test standalone war"/>
        </antcall>
        <antcall target="run.validator">
            <param name="arg.list" value="${validation.war}"/>
            <param name="log.id" value="1"/>
        </antcall>
        <antcall target="declare-test">
            <param name="description" value="dol/validation Test standalone ejb jar"/>
        </antcall>
        <antcall target="run.validator">
            <param name="arg.list" value="${validation.jar}"/>
            <param name="log.id" value="2"/>
        </antcall>

        <antcall target="declare-test">
            <param name="description" value="dol/validation Test standalone rar"/>
        </antcall>
        <antcall target="run.validator">
            <param name="arg.list" value="${validation.rar}"/>
            <param name="log.id" value="3"/>
        </antcall>
        <antcall target="declare-test">
            <param name="description" value="dol/validation Test standalone car"/>
        </antcall>
        <antcall target="run.validator">
            <param name="arg.list" value="${validation.car}"/>
            <param name="log.id" value="4"/>
        </antcall>
        <antcall target="declare-test">
            <param name="description" value="dol/validation Test ear"/>
        </antcall>
        <antcall target="run.validator">
            <param name="arg.list" value="${validation.ear}"/>
            <param name="log.id" value="5"/>
        </antcall>
        <antcall target="declare-test">
            <param name="description" value="dol/validation Test WLS Ear"/>
        </antcall>
        <antcall target="run.validator">
            <param name="arg.list" value="${validation.wlsEar}"/>
            <param name="log.id" value="6"/>
        </antcall>
        <antcall target="declare-test">
            <param name="description" value="dol/validation Test WLS Ear2"/>
        </antcall>
        <antcall target="run.validator">
            <param name="arg.list" value="${validation.wlsEar2} true"/>
            <param name="log.id" value="7"/>
        </antcall>
        <antcall target="declare-test">
            <param name="description" value="dol/validation Test WLS Ear3"/>
        </antcall>
        <antcall target="run.validator">
            <param name="arg.list" value="${validation.wlsEar3}"/>
            <param name="log.id" value="8"/>
        </antcall>

    </target>

    <target name="clobber" depends="clean">
        <delete dir="${build}"/>
    </target>

    <target name="usage">
        <antcall target="all"/>
    </target>

</project>
